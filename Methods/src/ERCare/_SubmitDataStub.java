package ERCare;


/**
* ERCare/_SubmitDataStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Messages.idl
* Monday, December 9, 2013 11:30:08 AM CET
*/

public class _SubmitDataStub extends org.omg.CORBA.portable.ObjectImpl implements ERCare.SubmitData
{

  public void SBPData (String patientID, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SBPData", false);
                $out.write_string (patientID);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                SBPData (patientID, value        );
            } finally {
                _releaseReply ($in);
            }
  } // SBPData

  public void DBPData (String PatientID, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("DBPData", false);
                $out.write_string (PatientID);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                DBPData (PatientID, value        );
            } finally {
                _releaseReply ($in);
            }
  } // DBPData

  public void HRPData (String PatientID, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("HRPData", false);
                $out.write_string (PatientID);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                HRPData (PatientID, value        );
            } finally {
                _releaseReply ($in);
            }
  } // HRPData

  public void SatData (String PatientID, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SatData", false);
                $out.write_string (PatientID);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                SatData (PatientID, value        );
            } finally {
                _releaseReply ($in);
            }
  } // SatData

  public void SetMinThreshold (String patientID, String dataType, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SetMinThreshold", false);
                $out.write_string (patientID);
                $out.write_string (dataType);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                SetMinThreshold (patientID, dataType, value        );
            } finally {
                _releaseReply ($in);
            }
  } // SetMinThreshold

  public void SetMaxThreshold (String patientID, String dataType, int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SetMaxThreshold", false);
                $out.write_string (patientID);
                $out.write_string (dataType);
                $out.write_long (value);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                SetMaxThreshold (patientID, dataType, value        );
            } finally {
                _releaseReply ($in);
            }
  } // SetMaxThreshold

  public int[] GetValues (String patientID, String dataType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetValues", true);
                $out.write_string (patientID);
                $out.write_string (dataType);
                $in = _invoke ($out);
                int $result[] = ERCare.PatientValuesHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetValues (patientID, dataType        );
            } finally {
                _releaseReply ($in);
            }
  } // GetValues

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ERCare/SubmitData:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _SubmitDataStub
